// The Android Gradle Plugin builds the native code with the Android NDK.

group = "com.cactus.flutter"
version = "1.0"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.7.0")
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"

// Define a task to unzip JNI libraries
task unzipJniLibsTask(type: Copy) {
    def jniLibsDir = file("src/main/jniLibs")
    def jniLibsZipFile = file("jniLibs.zip")
    onlyIf { jniLibsZipFile.exists() && !file("${jniLibsDir}/arm64-v8a").exists() } 

    from zipTree(jniLibsZipFile)
    into jniLibsDir

    doLast {
        println "Executed unzipJniLibsTask: Copied JNI libs from ${jniLibsZipFile.name} to ${jniLibsDir}."
        // Attempt to delete the zip file after successful extraction
        if (jniLibsZipFile.exists()) {
            if (jniLibsZipFile.delete()) {
                println "Successfully deleted ${jniLibsZipFile.name}."
            } else {
                println "Warning: Failed to delete ${jniLibsZipFile.name}."
            }
        }
    }
}

android {
    namespace = "com.cactus.flutter"

    compileSdk = 35

    ndkVersion = android.ndkVersion

    sourceSets {
        main.jniLibs.srcDirs += ['src/main/jniLibs']
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk = 21
    }

    afterEvaluate { project ->
        project.tasks.findByName("preBuild")?.dependsOn(unzipJniLibsTask)
    }
}
